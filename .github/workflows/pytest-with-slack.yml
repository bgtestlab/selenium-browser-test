name: Pytest with slack app

on:
  workflow_dispatch:
    inputs:
      thread_ts:
        description: 'Slack thread id'
        required: true
      environment:
        description: 'Test environment'
      tags:
        description: 'Test scenario tags'

jobs:
  pytest:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

#     - name: Create env file
#       run: |
#         touch .test.env
#         echo "TEST_ENVIRONMENT=${{ github.event.inputs.environment }}" >> .test.env
#         echo "PYTEST_TAGS=${{ github.event.inputs.tags }}" >> .test.env
#         cat .test.env

#     - name: Run pytest
#       run: |
#         docker-compose --env-file=.test.env -f ./docker_with_slack/docker/docker-compose.yaml config
#         docker-compose --env-file=.test.env -f ./docker_with_slack/docker/docker-compose.yaml up \
#         --abort-on-container-exit \
#         --exit-code-from test-runner

#     - name: Extract test results
#       run: |
#         docker cp test-runner:/app/report.html .
#       if: always()
      
    - name: Send test results message to Slack
      id: slack
      uses: slackapi/slack-github-action@v1.19.0
      with:
        channel-id: C02NNKV205R
        payload: |
          {
            "thread_ts": "${{ github.event.inputs.thread_ts }}",
            "blocks": [
              {
                "type": "header",
                "text": {
                  "type": "plain_text",
                  "text":  "Test result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                }
              }
            ]
          }
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      if: always()

    - name: Send test report to Slack
      run: |
        curl -F file=@report.html -F "initial_comment=[Actions] Test Report" \
        -F channels=C02NNKV205R -F thread_ts=${{ github.event.inputs.thread_ts }} \
        -H "Authorization: Bearer ${{ secrets.SLACK_BOT_TOKEN }}" https://slack.com/api/files.upload
      if: always()
