name: Pytest with slack app

on:
  workflow_dispatch:
    inputs:
      thread_ts:
        description: 'Slack thread id'
        required: true
      environment:
        description: 'Test environment'
        default: 'Prod'
      tags:
        description: 'Test scenario tags'
      mock_tags:
        description: 'Only used for priting Test scenario tags'
        default: ''

jobs:
  pytest:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Notify a new job start
      uses: slackapi/slack-github-action@v1.19.0
      with:
        channel-id: C02NNKV205R
        payload: |
          {
            "thread_ts": "${{ github.event.inputs.thread_ts }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "[Actions] <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|New job> has been started"
                  }
                }
              ]
          }
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

    - name: Create env file
      run: |
        touch .test.env
        echo "TEST_ENVIRONMENT=${{ github.event.inputs.environment }}" >> .test.env
        echo "PYTEST_TAGS=${{ github.event.inputs.tags }}" >> .test.env
        cat .test.env

    - name: Run pytest
      id: pytest
      run: |
        docker-compose --env-file=.test.env -f ./docker_with_slack/docker/docker-compose.yaml config
        docker-compose --env-file=.test.env -f ./docker_with_slack/docker/docker-compose.yaml up \
        --abort-on-container-exit \
        --exit-code-from test-runner

    - name: Extract test results
      run: |
        docker cp test-runner:/app/results.json .
        JSON=$(cat ./results.json)
        echo '${{ fromJson(JSON).total }}'
      if: steps.pytest.outcome == 'success' || steps.pytest.outcome == 'failure'

    - name: Extract report HTML
      run: docker cp test-runner:/app/report.html .
      if: steps.pytest.outcome == 'failure'
      
    - name: Send success test results message to Slack
      id: slack-test-success
      uses: slackapi/slack-github-action@v1.19.0
      with:
        channel-id: C02NNKV205R
        payload: |
          {
            "thread_ts": "${{ github.event.inputs.thread_ts }}",
            "blocks": [
              {
                "type": "header",
                "text": {
                  "type": "plain_text",
                  "text":  "Test result: :white_check_mark: ${{ job.status }}"
                }
              },
             {
                "type": "section",
                "fields": [
                  {
                    "type": "mrkdwn",
                    "text": "*Server:*\n${{ github.event.inputs.environment }}"
                  },
                  {
                    "type": "mrkdwn",
                    "text": "*Target:*\n${{ github.event.inputs.mock_tags }}"
                  }
                ]
              }
            ]
          }
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      if: steps.pytest.outcome == 'success'
      
    - name: Send failure test results message to Slack
      id: slack-test-failure
      uses: slackapi/slack-github-action@v1.19.0
      with:
        channel-id: C02NNKV205R
        payload: |
          {
            "thread_ts": "${{ github.event.inputs.thread_ts }}",
            "blocks": [
              {
                "type": "header",
                "text": {
                  "type": "plain_text",
                  "text":  "Test result: :no_entry: ${{ job.status }}"
                }
              },
             {
                "type": "section",
                "fields": [
                  {
                    "type": "mrkdwn",
                    "text": "*Server:*\n${{ github.event.inputs.environment }}"
                  },
                  {
                    "type": "mrkdwn",
                    "text": "*Target:*\n${{ github.event.inputs.mock_tags }}"
                  }
                ]
              }
            ]
          }
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      if: steps.pytest.outcome == 'failure'  
      
    - name: Notify test cancellation to Slack
      id: slack-test-cancelled
      uses: slackapi/slack-github-action@v1.19.0
      with:
        channel-id: C02NNKV205R
        payload: |
          {
            "thread_ts": "${{ github.event.inputs.thread_ts }}",
            "blocks": [
               {
                  "type": "section",
                    {
                      "type": "mrkdwn",
                      "text": "Test cancelled"
                    }
                }
            ]
          }
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      if: steps.pytest.outcome == 'success' || steps.pytest.outcome == 'failure'

    - name: Send test report to Slack
      run: |
        curl -F file=@report.html -F "initial_comment=[Actions] Test Report" \
        -F channels=C02NNKV205R -F thread_ts=${{ github.event.inputs.thread_ts }} \
        -H "Authorization: Bearer ${{ secrets.SLACK_BOT_TOKEN }}" https://slack.com/api/files.upload
      if: steps.pytest.outcome == 'failure'
